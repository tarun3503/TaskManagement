{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun.Kumar\\\\Desktop\\\\Tarun\\\\frontend\\\\src\\\\components\\\\EditTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { updateTask } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTaskForm({\n  task,\n  onTaskUpdated,\n  onClose\n}) {\n  _s();\n  const [formData, setFormData] = useState(task);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updateTask(task.taskId, formData);\n      onTaskUpdated();\n      onClose();\n    } catch (error) {\n      alert('Failed to update task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: formData.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: formData.description,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      value: formData.dueDate.split('T')[0],\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      value: formData.status,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"InProgress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTaskForm, \"ujm4gyXXyoq2SnFQ8+gdIF1CZjQ=\");\n_c = EditTaskForm;\nexport default EditTaskForm;\nvar _c;\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"names":["React","useState","updateTask","jsxDEV","_jsxDEV","EditTaskForm","task","onTaskUpdated","onClose","_s","formData","setFormData","handleChange","e","target","name","value","handleSubmit","preventDefault","taskId","error","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","title","onChange","required","description","dueDate","split","status","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tarun.Kumar/Desktop/Tarun/frontend/src/components/EditTaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { updateTask } from '../api/api';\n\nfunction EditTaskForm({ task, onTaskUpdated, onClose }) {\n  const [formData, setFormData] = useState(task);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await updateTask(task.taskId, formData);\n      onTaskUpdated();\n      onClose();\n    } catch (error) {\n      alert('Failed to update task');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Edit Task</h2>\n      <input type=\"text\" name=\"title\" value={formData.title} onChange={handleChange} required />\n      <input type=\"text\" name=\"description\" value={formData.description} onChange={handleChange} required />\n      <input type=\"date\" name=\"dueDate\" value={formData.dueDate.split('T')[0]} onChange={handleChange} required />\n      <select name=\"status\" value={formData.status} onChange={handleChange}>\n        <option value=\"Pending\">Pending</option>\n        <option value=\"InProgress\">In Progress</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n      <button type=\"submit\">Update</button>\n      <button type=\"button\" onClick={onClose}>Cancel</button>\n    </form>\n  );\n}\n\nexport default EditTaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}