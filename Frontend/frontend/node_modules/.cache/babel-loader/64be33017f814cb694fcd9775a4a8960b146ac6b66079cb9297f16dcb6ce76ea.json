{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun.Kumar\\\\Desktop\\\\Tarun\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { addTask } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onTaskAdded,\n  onClose\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Pending'\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.title || !formData.description) {\n      alert('Title and Description are required.');\n      return;\n    }\n    try {\n      await addTask(formData);\n      onTaskAdded();\n      onClose();\n    } catch (error) {\n      alert('Failed to add task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Description\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"dueDate\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"InProgress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"gp7BvrdaU14BYoc4jRMEpX0MkOA=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","addTask","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","onClose","_s","formData","setFormData","title","description","dueDate","status","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tarun.Kumar/Desktop/Tarun/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { addTask } from '../api/api';\n\nfunction TaskForm({ onTaskAdded, onClose }) {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    dueDate: '',\n    status: 'Pending'\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.title || !formData.description) {\n      alert('Title and Description are required.');\n      return;\n    }\n    try {\n      await addTask(formData);\n      onTaskAdded();\n      onClose();\n    } catch (error) {\n      alert('Failed to add task');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Task</h2>\n      <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={handleChange} required />\n      <input type=\"text\" name=\"description\" placeholder=\"Description\" onChange={handleChange} required />\n      <input type=\"date\" name=\"dueDate\" onChange={handleChange} required />\n      <select name=\"status\" onChange={handleChange}>\n        <option value=\"Pending\">Pending</option>\n        <option value=\"InProgress\">In Progress</option>\n        <option value=\"Completed\">Completed</option>\n      </select>\n      <button type=\"submit\">Add</button>\n      <button type=\"button\" onClick={onClose}>Cancel</button>\n    </form>\n  );\n}\n\nexport default TaskForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}